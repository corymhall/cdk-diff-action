"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VERSION = void 0;
exports.setLogThreshold = setLogThreshold;
exports.log = log;
const fs = require("fs");
const path = require("path");
let logThreshold = 'info';
exports.VERSION = JSON.parse(fs.readFileSync(path.join(__dirname, '..', 'package.json'), { encoding: 'utf-8' })).version;
const LOG_LEVELS = {
    verbose: 1,
    info: 2,
    error: 3,
};
function setLogThreshold(threshold) {
    logThreshold = threshold;
}
function log(level, message, stream) {
    if (LOG_LEVELS[level] >= LOG_LEVELS[logThreshold]) {
        if (stream === 'stdout') {
            console.log(`${level.padEnd(7, ' ')}: ${message}`);
        }
        else {
            console.error(`${level.padEnd(7, ' ')}: ${message}`);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxvZ2dpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBZ0JBLDBDQUVDO0FBRUQsa0JBUUM7QUE1QkQseUJBQXlCO0FBQ3pCLDZCQUE2QjtBQUc3QixJQUFJLFlBQVksR0FBYSxNQUFNLENBQUM7QUFFdkIsUUFBQSxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FDL0IsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsY0FBYyxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FDbkYsQ0FBQyxPQUFPLENBQUM7QUFFVixNQUFNLFVBQVUsR0FBNkI7SUFDM0MsT0FBTyxFQUFFLENBQUM7SUFDVixJQUFJLEVBQUUsQ0FBQztJQUNQLEtBQUssRUFBRSxDQUFDO0NBQ1QsQ0FBQztBQUVGLFNBQWdCLGVBQWUsQ0FBQyxTQUFtQjtJQUNqRCxZQUFZLEdBQUcsU0FBUyxDQUFDO0FBQzNCLENBQUM7QUFFRCxTQUFnQixHQUFHLENBQUMsS0FBZSxFQUFFLE9BQWUsRUFBRSxNQUE0QjtJQUNoRixJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxVQUFVLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQztRQUNsRCxJQUFJLE1BQU0sS0FBSyxRQUFRLEVBQUUsQ0FBQztZQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEtBQUssT0FBTyxFQUFFLENBQUMsQ0FBQztRQUNyRCxDQUFDO2FBQU0sQ0FBQztZQUNOLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsS0FBSyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3ZELENBQUM7SUFDSCxDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcbmltcG9ydCAqIGFzIHBhdGggZnJvbSAncGF0aCc7XG5cbmV4cG9ydCB0eXBlIExvZ0xldmVsID0gJ3ZlcmJvc2UnIHwgJ2luZm8nIHwgJ2Vycm9yJztcbmxldCBsb2dUaHJlc2hvbGQ6IExvZ0xldmVsID0gJ2luZm8nO1xuXG5leHBvcnQgY29uc3QgVkVSU0lPTiA9IEpTT04ucGFyc2UoXG4gIGZzLnJlYWRGaWxlU3luYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4nLCAncGFja2FnZS5qc29uJyksIHsgZW5jb2Rpbmc6ICd1dGYtOCcgfSlcbikudmVyc2lvbjtcblxuY29uc3QgTE9HX0xFVkVMUzogUmVjb3JkPExvZ0xldmVsLCBudW1iZXI+ID0ge1xuICB2ZXJib3NlOiAxLFxuICBpbmZvOiAyLFxuICBlcnJvcjogMyxcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRMb2dUaHJlc2hvbGQodGhyZXNob2xkOiBMb2dMZXZlbCkge1xuICBsb2dUaHJlc2hvbGQgPSB0aHJlc2hvbGQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2cobGV2ZWw6IExvZ0xldmVsLCBtZXNzYWdlOiBzdHJpbmcsIHN0cmVhbT86ICdzdGRvdXQnIHwgJ3N0ZGVycicpIHtcbiAgaWYgKExPR19MRVZFTFNbbGV2ZWxdID49IExPR19MRVZFTFNbbG9nVGhyZXNob2xkXSkge1xuICAgIGlmIChzdHJlYW0gPT09ICdzdGRvdXQnKSB7XG4gICAgICBjb25zb2xlLmxvZyhgJHtsZXZlbC5wYWRFbmQoNywgJyAnKX06ICR7bWVzc2FnZX1gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihgJHtsZXZlbC5wYWRFbmQoNywgJyAnKX06ICR7bWVzc2FnZX1gKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==